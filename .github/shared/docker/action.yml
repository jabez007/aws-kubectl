name: Build and Push Docker Image to GHCR
description: Builds a Docker image and either pushes to GHCR or uploads a tarball artifact

inputs:
  artifact-name:
    required: false
    type: string
  artifact-path:
    type: string
    default: .
  platforms:
    type: string
    default: linux/amd64,linux/arm64
  build-args:
    required: false
    type: string
  tag:
    required: false
    type: string
  push:
    type: boolean
    default: false
  debug:
    type: boolean
    default: false

runs:
  using: composite
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: See which repo we just cloned
      if: ${{ inputs.debug }}
      run: ls -lha
      shell: bash

    - name: Get short commit hash
      id: git_commit
      run: echo "short_hash=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Download artifacts
      if: ${{ inputs.artifact-name != '' }}
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ inputs.artifact-path }}

    - name: See which artifacts we just downloaded
      if: ${{ inputs.artifact-name != '' && inputs.debug }}
      run: ls ${{ inputs.artifact-path }} -lha
      shell: bash

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      if: ${{ inputs.push }}
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }} # The name of the person or app that initiated the workflow. For example, octocat.
        password: ${{ secrets.GITHUB_TOKEN }} # automatically provided by GitHub Actions, so you don't need to create it manually.

    - name: Build and push Docker image
      if: ${{ inputs.push }}
      uses: docker/build-push-action@v4
      with:
        platforms: ${{ inputs.platforms }}
        build-args: ${{ inputs.build-args }}
        context: .
        push: true
        # GITHUB_REPOSITORY = The owner and repository name. For example, octocat/Hello-World.
        # ghcr.io prefix makes sure we are pushing to GHCR
        tags: ghcr.io/${{ github.repository }}:${{ inputs.tag || steps.git_commit.outputs.short_hash }} # octocat/Hello-World:ffac537

    - name: Build and export Docker image
      if: ${{ ! inputs.push }}
      uses: docker/build-push-action@v4
      with:
        build-args: ${{ inputs.build-args }}
        context: .
        tags: ${{ github.repository }}:${{ inputs.tag || steps.git_commit.outputs.short_hash }}
        outputs: type=docker,dest=/tmp/${{ github.event.repository.name }}.tar

    - name: Upload image artifacts
      if: ${{ ! inputs.push }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.git_commit.outputs.short_hash }}
        path: /tmp/${{ github.event.repository.name }}.tar

    - name: Post cleanup
      run: docker image prune -f
      shell: bash
